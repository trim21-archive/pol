jobs:
  - job: 'Docker'
    pool:
      vmImage: $(vm_image)

    steps:
      - script: |
          SHA=$(Build.SourceVersion)
          SHA=${SHA:0:7}
          REF=$(Build.SourceBranch)

          BRANCH_OR_TAG=$(echo "$REF" | cut -d "/" -f 3- )
          TYPE=$(echo "$REF" | cut -d "/" -f 2 )

          case "$TYPE" in

            tags)
              # on tag
              BUILD_REF=${BRANCH_OR_TAG}
              TAGS=SHA,$BRANCH_OR_TAG,latest
              ;;

            heads)
              # on branch
              BUILD_REF=$SHA
              TAGS=$SHA,${BRANCH_OR_TAG////-}
              ;;

            *)
              echo "$REF"
              # on pr
              REF=${BRANCH_OR_TAG}
              SLUG="${REF}-${SHA}"
              ;;
          esac

          echo "Tags: $TAGS"
          echo "##vso[task.setvariable variable=BUILD_REF]$BUILD_REF"
          echo "##vso[task.setvariable variable=TAGS]$TAGS"

      - script: |
          docker build \
            -t trim21/pol:current \
            --build-arg "COMMIT_REF=$BUILD_REF" \
            .
        displayName: Build Docker

      - script: |
          docker login --username trim21 --password $DOCKER_PASS

          # Set space as the delimiter
          IFS=','
          echo "tags: $TAGS"
          #Read the split words into an array based on space delimiter
          read -a Tags <<< "$TAGS"

          for tag in "${Tags[@]}"; do
            docker tag trim21/pol:current trim21/pol:$tag
            docker push trim21/pol:$tag
          done

        displayName: Publish Docker
        env:
          DOCKER_PASS: $(DOCKER_PASS)
        condition: |
          or(
            startsWith(variables['build.sourceBranch'], 'refs/tags/v'),
            startsWith(variables['build.sourceBranch'], 'refs/heads/')
          )
